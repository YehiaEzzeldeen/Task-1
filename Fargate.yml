Parameters:
    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for the VPC
        Type: String
        Default: 10.0.0.0/16
    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for Public Subnet 1
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for Public Subnet 2
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for Private Subnet 1
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for Private Subnet 2
        Type: String
        Default: 10.0.3.0/24

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames : true
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties: 
            Tags: 
                - Key: Name
                  Value: IGW
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties: 
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: public Subnet (AZ2)


    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                -   Key: Name
                    Value: Private Subnet (AZ1)

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                -   Key: Name
                    Value: Private Subnet (AZ2)
    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: Public Route Table

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2


    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: Private Route Table (AZ1)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: Private Route Table (AZ2)

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to the loadbalancer
            VpcId: !Ref VPC
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    ecrRepository:
        Type: AWS::ECR::Repository
        Properties: 
            RepositoryName: ecs-repo
    
    ecsCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: Fargate-ECS-Cluster

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            NetworkMode: awsvpc
            RequiresCompatibilities:
                - FARGATE
            Cpu: 256
            Memory: 0.5GB
            ExecutionRoleArn: ecsTaskExecutionRole
            TaskRoleArn: ecsTaskExecutionRole
            ContainerDefinitions:
            - Name: latest
              Image: 624792314775.dkr.ecr.us-west-1.amazonaws.com/ecs-repo:latest
              PortMappings:
                - ContainerPort: 80

    TaskSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to the Task
            VpcId: !Ref VPC
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckTimeoutSeconds: 5
            UnhealthyThresholdCount: 2
            HealthyThresholdCount: 2
            Name: NginxTargetGrp
            Port: 80
            Protocol: HTTP
            TargetType: ip
            VpcId: !Ref VPC

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: ECS-LB
            Scheme: internet-facing
            SecurityGroups:
                - !Ref LoadBalancerSecurityGroup
            Subnets:
                - !Ref PublicSubnet1
                - !Ref PublicSubnet2

    ListenerHTTP:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP
        

    ecsService:
        Type: AWS::ECS::Service
        DependsOn:
            - ListenerHTTP
        Properties: 
            ServiceName: ecsNginxService
            Cluster: !Ref ecsCluster
            TaskDefinition: !Ref TaskDefinition
            DeploymentConfiguration:
                MinimumHealthyPercent: 100
                MaximumPercent: 200
            DesiredCount: 1
            HealthCheckGracePeriodSeconds: 30
            LaunchType: FARGATE
            NetworkConfiguration: 
                AwsvpcConfiguration:
                    AssignPublicIp: DISABLED
                    Subnets:
                        - !Ref PrivateSubnet1
                        - !Ref PrivateSubnet2
                    SecurityGroups:
                        - !Ref TaskSecurityGroup
            LoadBalancers:
                - ContainerName: latest
                  ContainerPort: 80
                  TargetGroupArn: !Ref TargetGroup

Outputs:
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: VPCID
    
    VPCPublicRouteTable: 
        Description: Public Route Table
        Value: !Ref PublicRouteTable
        Export:
          Name: PUB-RT

    VPCPrivateRouteTable1: 
        Description: Private Route Table AZ1
        Value: !Ref PrivateRouteTable1
        Export:
          Name: PRI1-RT

    VPCPrivateRouteTable2: 
        Description: Private Route Table AZ2
        Value: !Ref PrivateRouteTable2
        Export:
          Name: PRI2-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export:
          Name: PUB-SUBNETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export:
          Name: PRIV-SUBNETS

    ecrRepositoryURI:
        Description: ECR Repository URI
        Value: !GetAtt ecrRepository.RepositoryUri
        Export:
          Name: ECR-Repository-URI
    LoadBalancerSecurityGroupOutput:
        Value: !Ref LoadBalancerSecurityGroup
        Export:
          Name: LB-Sec-Grp